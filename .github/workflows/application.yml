name: Application
on:
    push:
      # Sequence of patterns matched against refs/tags
      tags:
        - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  
jobs:
  build:
    name: Build Application
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        version: ['1.5']
        os: [ubuntu-latest, macOS-latest]
        arch:
          - x64

    steps:
    - name: Checkout code
      uses: actions/checkout@v1
    - name: Build project # This would actually build your project, using zip for an example artifact
      uses: julia-actions/setup-julia@v1
      with:
        version: ${{ matrix.version }}
        arch: ${{ matrix.arch }}
    - uses: actions/cache@v1
      env:
        cache-name: cache-artifacts
      with:
        path: ~/.julia/artifacts
        key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
        restore-keys: |
          ${{ runner.os }}-test-${{ env.cache-name }}-
          ${{ runner.os }}-test-
          ${{ runner.os }}-
    - run: |
          git config --global user.name Tester
          git config --global user.email te@st.er
    - run: julia --project -e "using Pkg; Pkg.instantiate()"
    - run: julia --project -e "using Pkg; Pkg.status()"
    - run: |
        julia --project deps/build.jl app tarball
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./build/*.tar.gz
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
